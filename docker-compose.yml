version: "3"

services:
  auth-api-service:
    container_name: auth-api-service
    restart: unless-stopped
    build:
      context: ./
      dockerfile: auth.Dockerfile
    env_file:
      - .env
    networks:
      - social-ai-profile
    depends_on:
      redis:
        condition: service_healthy


  bot-service:
    container_name: bot-service
    restart: unless-stopped
    build:
      context: ./
      dockerfile: bot.Dockerfile
    env_file:
      - .env
    networks:
      - social-ai-profile
    depends_on:
      redis:
        condition: service_healthy

  redis-service:
    container_name: redis-service
    image: redis:latest
    restart: always
    privileged: true
    networks:
      - social-ai-profile
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 5
    expose:
      - "6379"

  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    privileged: true
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./www/:/var/www/
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      fastapi-auth-api:
        condition: service_started
      bot:
        condition: service_started
      redis:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    networks:
      - social-ai-profile

  prometheus:
    container_name: prometheus
    build:
      context: ./prometheus
    privileged: true
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.config.file=/etc/prometheus/web.yml
    volumes:
      - ./prometheus/:/etc/prometheus/:ro
      - prometheus-data:/data
    depends_on:
      - cadvisor
    networks:
      - social-ai-profile

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    privileged: true
    ports:
      - "8080:8080"
    command:
      - --enable_metrics=cpu,memory,network
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - social-ai-profile

  redis_exporter:
    container_name: redis_exporter
    image: oliver006/redis_exporter:alpine
    privileged: true
    restart: unless-stopped
    ports:
      - "9121:9121"
    command:
      - --redis.addr=redis://redis:6379
    depends_on:
      - redis
    networks:
      - social-ai-profile

  grafana:
    container_name: grafana
    build:
      context: ./grafana
    privileged: true
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - social-ai-profile

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:latest
    privileged: true
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager:/config
      - alertmanager-data:/data
    command:
      - --config.file=/config/alertmanager.yml
      - --web.config.file=/config/web.yml
    depends_on:
      - prometheus
    networks:
      - social-ai-profile

networks:
  social-ai-profile:

volumes:
  prometheus-data:
  alertmanager-data:
